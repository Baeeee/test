import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.BufferedReader;
import java.awt.Desktop;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.Scanner;

public class test {

    public static void unpack() {
        // 난독화 해제 웹사이트 띄우기
        try {
            Desktop.getDesktop().browse(new URI("https://www.strictly-software.com/unpack-javascript/"));
        } catch(IOException e) {
            e.printStackTrace();
        } catch(URISyntaxException e) {
            e.printStackTrace();
        }
    }
    public static void Check_Proguard() {
        // Proguard 설정 여부를 통해 난독화 판정
        try {
            String input1 = "minifyEnabled";
            String input2 = "true";

            File f = new File("C:\\Users\\초아\\Desktop\\diva-android-master\\diva-android-master\\app\\build.gradle");
            FileReader fr = new FileReader(f);
            BufferedReader bufr = new BufferedReader(fr);
            String line = "";
            while ((line = bufr.readLine()) != null) {
                if (line.contains(input1)) {
                    if (line.contains(input2))
                        unpack();
                    else
                        System.out.println("난독화 설정 X"); }
            }
                bufr.close();
        }
        catch(FileNotFoundException e) {
            System.out.println("파일을 찾을 수 없음");
        }
        catch(IOException e) {
            System.out.println(e);
        }
    }

    public static void subDirList(String source) {
    // 폴더내 서브 파일명까지 출력
        File dir = new File(source);
        File[] fileList = dir.listFiles();
        try {
            for (int i=0; i<fileList.length; i++) {
                File file = fileList[i];
                if(file.isFile()){
                    // 파일이 있다면 파일 이름 출력
                    // 자바 파일일때 읽어 들이기
                    if(fileList[i].getName().contains(".java"))
                        System.out.println("\t 파일 이름 = " + file.getName());
                }else
                if (file.isDirectory()) {
                    System.out.println();
                    System.out.println("디렉토리 이름 = " + file.getName());
                    // 서브디렉토리가 존재하면 재귀적 방법으로 다시 탐색
                    subDirList(file.getCanonicalPath());
                    System.out.println();
                }
            }
        } catch (IOException e) {}
    }

    public static void Find_file() throws IOException {
        // 폴더안 모든 파일 읽기
        // 경로 입력 받기
          System.out.print("경로입력: ");
          Scanner sc1 = new Scanner(System.in);
          String FolderPath = sc1.next();
          File folder = new File(FolderPath);
          String input= "void";

        if (folder.exists() == false) {
        System.out.println("Not Found");
         } else {
            subDirList(FolderPath);

        System.out.print("파일명 입력 (디렉토리경로 포함) : ");
        Scanner sc2 = new Scanner(System.in);
        String fileN = sc2.next();
        File folder2 = new File(FolderPath + "\\" +fileN);
        FileReader fr = new FileReader(folder2);
        BufferedReader bufr = new BufferedReader(fr);
        String line = "";
        while((line = bufr.readLine()) != null) {
                 if(line.contains(input)) {
                     // 라인 중 void 포함한 라인 찾음
                    int a = line.indexOf(input);
                    int b = line.indexOf("(");
                    String word = line.substring(a,b);

                    String[] arr = word.split(" ");
                    if(arr[1].length() <= 2)
                        unpack();
                    else System.out.println("난독화 설정 X");
        } }
        bufr.close(); }
}

    public static void main(String[] args) throws IOException {

        System.out.println("---------------------------");
        System.out.println("       < 난독화 체크 >     ");
        System.out.println(" 1 : ProGuard 설정여부 확인 ");
        System.out.println(" 2 : 함수명 길이 확인 ");
        System.out.println("---------------------------");
        System.out.print("원하는 번호를 입력 : ");
        Scanner sc = new Scanner(System.in);
        int input = sc.nextInt();

        switch (input) {
            case 1: Check_Proguard();
                break;
            case 2: Find_file();
                break;
        }
    }
}
